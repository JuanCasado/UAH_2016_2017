/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screens;

import classes.Apuesta;
import classes.ApuestaMesa;
import classes.Baraja;
import classes.Carta;
import classes.CasaDeApuestas;
import classes.Ex;
import classes.Jugador;
import classes.JugadorRegistrado;
import classes.OrdenaCartas;
import classes.Premio;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author mr.blissfulgrin
 */
public class Mesa extends javax.swing.JFrame {

    /**
     * Creates new form Mesa
     */
    public Mesa() {
        initComponents();
        this.txtnombre = new JLabel[]{j1name, j2name, j3name, j4name};
        this.txtdinero = new JLabel[]{j1dinero, j2dinero, j3dinero, j4dinero};
        this.descartadas = new JLabel[]{d1, d2};
        this.cartas = new JLabel[][]{{j11, j12, j13, j14,j15},{j21,j22,j23,j24,j25},{j31,j32,j33,j34,j35},{j41,j42,j43,j44,j45}};
        this.manos = new JLabel[]{m1, m2, m3, m4};
        this.b = new Baraja();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        pasar = new javax.swing.JButton();
        descartar = new javax.swing.JButton();
        apostar = new javax.swing.JButton();
        dinero = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        cruz = new javax.swing.JButton();
        txt1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txt2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        j41 = new javax.swing.JLabel();
        j42 = new javax.swing.JLabel();
        j43 = new javax.swing.JLabel();
        j44 = new javax.swing.JLabel();
        j45 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        j31 = new javax.swing.JLabel();
        j32 = new javax.swing.JLabel();
        j33 = new javax.swing.JLabel();
        j34 = new javax.swing.JLabel();
        j35 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        j11 = new javax.swing.JLabel();
        j12 = new javax.swing.JLabel();
        j13 = new javax.swing.JLabel();
        j14 = new javax.swing.JLabel();
        j15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        d1 = new javax.swing.JLabel();
        d2 = new javax.swing.JLabel();
        mazo = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        j3name = new javax.swing.JLabel();
        j3dinero = new javax.swing.JLabel();
        m3 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        j1name = new javax.swing.JLabel();
        j1dinero = new javax.swing.JLabel();
        m1 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        j2name = new javax.swing.JLabel();
        j2dinero = new javax.swing.JLabel();
        m2 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        j4name = new javax.swing.JLabel();
        j4dinero = new javax.swing.JLabel();
        m4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        j21 = new javax.swing.JLabel();
        j22 = new javax.swing.JLabel();
        j23 = new javax.swing.JLabel();
        j24 = new javax.swing.JLabel();
        j25 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Mesa");
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel3.setBackground(new java.awt.Color(109, 131, 31));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 102, 0), new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.CardLayout(30, 20));

        jPanel14.setBackground(new java.awt.Color(109, 131, 31));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBackground(new java.awt.Color(109, 131, 31));
        jPanel4.setLayout(new java.awt.CardLayout(230, 0));

        jPanel8.setBackground(new java.awt.Color(109, 131, 31));
        jPanel8.setLayout(new java.awt.GridLayout());

        pasar.setBackground(new java.awt.Color(153, 153, 0));
        pasar.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        pasar.setText("Pasar");
        pasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasarActionPerformed(evt);
            }
        });
        jPanel8.add(pasar);

        descartar.setBackground(new java.awt.Color(102, 153, 0));
        descartar.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        descartar.setText("Descartar");
        descartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descartarActionPerformed(evt);
            }
        });
        jPanel8.add(descartar);

        apostar.setBackground(new java.awt.Color(51, 255, 0));
        apostar.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        apostar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/Apostar.png"))); // NOI18N
        apostar.setText("Apostar");
        apostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apostarActionPerformed(evt);
            }
        });
        jPanel8.add(apostar);

        dinero.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dineroStateChanged(evt);
            }
        });
        jPanel8.add(dinero);

        jPanel4.add(jPanel8, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel14.add(jPanel4, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(109, 131, 31));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        cruz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/cruz.png"))); // NOI18N
        cruz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cruzActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(cruz, gridBagConstraints);

        txt1.setFont(new java.awt.Font("Malayalam MN", 1, 36)); // NOI18N
        txt1.setForeground(new java.awt.Color(223, 223, 223));
        txt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt1.setText("Haga clik en el mazo para repartir las cartas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel5.add(txt1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel14.add(jPanel5, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(109, 131, 31));
        jPanel1.setLayout(new java.awt.CardLayout());

        txt2.setFont(new java.awt.Font("Malayalam MN", 1, 14)); // NOI18N
        txt2.setForeground(new java.awt.Color(223, 223, 223));
        txt2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(txt2, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel14.add(jPanel1, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(109, 131, 31));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel6.setBackground(new java.awt.Color(109, 131, 31));
        jPanel6.setLayout(new java.awt.GridLayout(0, 1));

        j41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel6.add(j41);

        j42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel6.add(j42);

        j43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel6.add(j43);

        j44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel6.add(j44);

        j45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel6.add(j45);

        jPanel2.add(jPanel6);

        jPanel21.setBackground(new java.awt.Color(109, 131, 31));
        jPanel21.setLayout(new java.awt.BorderLayout());

        jPanel23.setBackground(new java.awt.Color(109, 131, 31));
        jPanel23.setLayout(new java.awt.GridLayout());
        jPanel23.add(jLabel10);

        j31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel23.add(j31);

        j32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel23.add(j32);

        j33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel23.add(j33);

        j34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel23.add(j34);

        j35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel23.add(j35);
        jPanel23.add(jLabel9);

        jPanel21.add(jPanel23, java.awt.BorderLayout.PAGE_START);

        jPanel25.setBackground(new java.awt.Color(109, 131, 31));
        jPanel25.setLayout(new java.awt.GridLayout());
        jPanel25.add(jLabel15);

        j11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        j11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j11MouseClicked(evt);
            }
        });
        jPanel25.add(j11);

        j12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        j12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j12MouseClicked(evt);
            }
        });
        jPanel25.add(j12);

        j13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        j13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j13MouseClicked(evt);
            }
        });
        jPanel25.add(j13);

        j14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        j14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j14MouseClicked(evt);
            }
        });
        jPanel25.add(j14);

        j15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        j15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j15MouseClicked(evt);
            }
        });
        jPanel25.add(j15);
        jPanel25.add(jLabel14);

        jPanel21.add(jPanel25, java.awt.BorderLayout.PAGE_END);

        jPanel26.setBackground(new java.awt.Color(109, 131, 31));
        jPanel26.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(new java.awt.Color(109, 131, 31));
        jPanel9.setLayout(new java.awt.GridLayout());

        d1.setBackground(new java.awt.Color(109, 131, 31));
        d1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel9.add(d1);

        d2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel9.add(d2);

        mazo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mazo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/carta.jpg"))); // NOI18N
        mazo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mazoMouseClicked(evt);
            }
        });
        jPanel9.add(mazo);

        jPanel26.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel10.setBackground(new java.awt.Color(109, 131, 31));
        jPanel10.setLayout(new java.awt.GridLayout(1, 0, 2, 5));

        j3name.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j3name.setForeground(new java.awt.Color(255, 255, 0));
        j3name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel10.add(j3name);

        j3dinero.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j3dinero.setForeground(new java.awt.Color(255, 255, 0));
        j3dinero.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        j3dinero.setText("$");
        jPanel10.add(j3dinero);

        m3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel10.add(m3);

        jPanel26.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        jPanel11.setBackground(new java.awt.Color(109, 131, 31));
        jPanel11.setLayout(new java.awt.GridLayout(1, 0, 2, 5));

        j1name.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j1name.setForeground(new java.awt.Color(102, 0, 153));
        j1name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel11.add(j1name);

        j1dinero.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j1dinero.setForeground(new java.awt.Color(102, 0, 153));
        j1dinero.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        j1dinero.setText("$");
        jPanel11.add(j1dinero);

        m1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel11.add(m1);

        jPanel26.add(jPanel11, java.awt.BorderLayout.PAGE_END);

        jPanel12.setBackground(new java.awt.Color(109, 131, 31));
        jPanel12.setLayout(new java.awt.GridLayout(0, 1, 5, 2));

        j2name.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j2name.setForeground(new java.awt.Color(0, 255, 255));
        j2name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j2name.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel12.add(j2name);

        j2dinero.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j2dinero.setForeground(new java.awt.Color(0, 255, 255));
        j2dinero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j2dinero.setText("$");
        j2dinero.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel12.add(j2dinero);

        m2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel12.add(m2);

        jPanel26.add(jPanel12, java.awt.BorderLayout.LINE_END);

        jPanel13.setBackground(new java.awt.Color(109, 131, 31));
        jPanel13.setLayout(new java.awt.GridLayout(0, 1, 5, 2));

        j4name.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j4name.setForeground(new java.awt.Color(102, 255, 0));
        j4name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j4name.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel13.add(j4name);

        j4dinero.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        j4dinero.setForeground(new java.awt.Color(102, 255, 0));
        j4dinero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j4dinero.setText("$");
        j4dinero.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel13.add(j4dinero);

        m4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel13.add(m4);

        jPanel26.add(jPanel13, java.awt.BorderLayout.LINE_START);

        jPanel21.add(jPanel26, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel21);

        jPanel7.setBackground(new java.awt.Color(109, 131, 31));
        jPanel7.setLayout(new java.awt.GridLayout(0, 1));

        j21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel7.add(j21);

        j22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel7.add(j22);

        j23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel7.add(j23);

        j24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel7.add(j24);

        j25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        jPanel7.add(j25);

        jPanel2.add(jPanel7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel14.add(jPanel2, gridBagConstraints);

        jPanel3.add(jPanel14, "card3");

        getContentPane().add(jPanel3, "card3");

        setSize(new java.awt.Dimension(1100, 922));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cruzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cruzActionPerformed
        for (int x =0; x<4;x++)
        {
            try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador[x].getNIF()+".txt",true)))) 
            {
                DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                salida.println("**************** SALIÓ DEL JUEGO EN MESA******************************\n");
                salida.println(LocalDate.now().format(formatoCorto));
                salida.println("*****************************************************************\n");
                salida.close();
            } 
            catch (IOException ex) 
            {
                Warnning w = new Warnning();
                w.setTextoW("Error al crear archivo de registro");
                w.setVisible(true);
            }
        }
        
        Dentro d = new Dentro();
        d.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cruzActionPerformed

    private int seleccion = -1;
    
    private void mazoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mazoMouseClicked
        if (fase == 4)
        {
            txt1.setText("Haga click en el mazo para repartir las cartas");
            txt2.setText("Pierde 5$ por pasar");
            ImageIcon vacio = new ImageIcon("./src/imgages/void.png");
            for (JLabel[] carta1 : cartas) {
                for (JLabel carta11 : carta1) {
                    carta11.setIcon(vacio);
                }
            }
            cartasJ1.clear();
            cartasJ2.clear();
            cartasJ3.clear();
            cartasJ4.clear();
            cartasD.clear();
            
            fase = 0;
            apuesta=0;
            contador=0;
            for (int x=0; x<control.length;x++)
            {
                control[x]=true;
            }
            
            b = new Baraja();
            
            jugador[0].dineroEnPartida((-5));
            actualizarJugadores();
            for (int x =0; x < jugador.length;x++)
            {
                try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador[x].getNIF()+".txt",true)))) 
                {
                    salida.println("******************* Juego FINALIZADO ***************************\n");
                    salida.close();
                } 
                catch (IOException ex) 
                {
                    Warnning w = new Warnning();
                    w.setTextoW("Error al crear archivo de registro");
                    w.setVisible(true);
                }  
            }
        
        }
        if (fase == 0)
        {
            for(int x=0;x<4;x++)
            {
                manos[x].setIcon(null);
            }
            mano++;
            ImageIcon manox = new ImageIcon("./src/imgages/mano.png");
            manos[mano].setIcon(manox);
            
            txt2.setText("");
            CasaDeApuestas.addPartida();
            for (int x =0; x < jugador.length;x++)
            {
                jugador[x].añadirPartida();
                try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador[x].getNIF()+".txt",true)))) 
                {
                    DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    salida.println("**************** Juego EN MESA iniciado ***************************\n");  
                    salida.println(LocalDate.now().format(formatoCorto));
                    salida.close();
                } 
                catch (IOException ex) 
                {
                    Warnning w = new Warnning();
                    w.setTextoW("Error al crear archivo de registro");
                    w.setVisible(true);
                }  
            }
            
            cartasJ1=b.darCartas(5);
            cartasJ2=b.darCartas(5);
            cartasJ3=b.darCartas(5);
            cartasJ4=b.darCartas(5);
            
            cartasD=b.darCartas(2);
            
            cartasJ1.sort(new OrdenaCartas());
            cartasJ2.sort(new OrdenaCartas());
            cartasJ3.sort(new OrdenaCartas());
            cartasJ4.sort(new OrdenaCartas());
            cartasD.sort(new OrdenaCartas());
            
            ImageIcon carta = new ImageIcon("./src/imgages/carta.jpg");
            for (JLabel[] carta1 : cartas) {
                for (JLabel carta11 : carta1) {
                    carta11.setIcon(carta);
                }
            }
            
            txt1.setText("Pulsa las cartas para darles la vuelta");
            
            fase=1;
        }
    }//GEN-LAST:event_mazoMouseClicked

    private void j11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j11MouseClicked
        if (fase == 2)
        {
            seleccion=0;
            txt2.setText("Carta seleccionada: "+cartasJ1.get(0).toString());
        }
        
        if ((fase == 1 )&& control[0])
        {
            j11.setIcon(cartasJ1.get(0).getImagen());
            contador++;
            control[0]=false;
            if (contador>=5)
            {
                txt1.setText("¿Qué desea hacer?");
                txt2.setText("Puede descartar dos cartas pero debe hacerlo de una en una");
                fase=2;
                contador=0;
                dinero.setValue(10);
            }
        }
    }//GEN-LAST:event_j11MouseClicked

    private void j12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j12MouseClicked
        if (fase == 2)
        {
            seleccion=1;
            txt2.setText("Carta seleccionada: "+cartasJ1.get(1).toString());
        }
        if ((fase == 1)&&control[1])
        {
            j12.setIcon(cartasJ1.get(1).getImagen());
            contador++;
            control[1]=false;
            if (contador>=5)
            {
                txt1.setText("¿Qué desea hacer?");
                txt2.setText("Puede descartar dos cartas pero debe hacerlo de una en una");
                fase=2;
                contador=0;
                dinero.setValue(10);
            }
        }
    }//GEN-LAST:event_j12MouseClicked

    private void j13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j13MouseClicked
       if (fase == 2)
        {
            seleccion=2;
            txt2.setText("Carta seleccionada: "+cartasJ1.get(2).toString());
        }
        if ((fase == 1)&&control[2])
        {
            j13.setIcon(cartasJ1.get(2).getImagen());
            contador++;
            control[2]=false;
            if (contador>=5)
            {
                txt1.setText("¿Qué desea hacer?");
                txt2.setText("Puede descartar dos cartas pero debe hacerlo de una en una");
                fase=2;
                contador=0;
                dinero.setValue(10);
            }
        }
    }//GEN-LAST:event_j13MouseClicked

    private void j14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j14MouseClicked
        if (fase == 2)
        {
            seleccion=3;
            txt2.setText("Carta seleccionada: "+cartasJ1.get(3).toString());
        }
        if ((fase == 1)&&control[3])
        {
            j14.setIcon(cartasJ1.get(3).getImagen());
            contador++;
            control[3]=false;
            if (contador>=5)
            {
                txt1.setText("¿Qué desea hacer?");
                txt2.setText("Puede descartar dos cartas pero debe hacerlo de una en una");
                fase=2;
                contador=0;
                dinero.setValue(10);
            }
        }
    }//GEN-LAST:event_j14MouseClicked

    private void j15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j15MouseClicked
        if (fase == 2)
        {
            seleccion=4;
            txt2.setText("Carta seleccionada: "+cartasJ1.get(4).toString());
        }
        if ((fase == 1)&&control[4])
        {
            j15.setIcon(cartasJ1.get(4).getImagen());
            contador++;
            control[4]=false;
            if (contador>=5)
            {
                txt1.setText("¿Qué desea hacer?");
                txt2.setText("Puede descartar dos cartas pero debe hacerlo de una en una // Apuesta minima de 10$ // Si pasa perderá 5$");
                fase=2;
                contador=0;
                dinero.setValue(10);
            }
        }
    }//GEN-LAST:event_j15MouseClicked

    private void pasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasarActionPerformed
        if ((fase == 2)||(fase==3))
        {
            txt1.setText("Haga click en el mazo para repartir las cartas");
            txt2.setText("Pierde 5$ por pasar");
            ImageIcon vacio = new ImageIcon("./src/imgages/void.png");
            for (JLabel[] carta1 : cartas) {
                for (JLabel carta11 : carta1) {
                    carta11.setIcon(vacio);
                }
            }
            cartasJ1.clear();
            cartasJ2.clear();
            cartasJ3.clear();
            cartasJ4.clear();
            cartasD.clear();
            
            fase = 0;
            apuesta=0;
            contador=0;
            for (int x=0; x<control.length;x++)
            {
                control[x]=true;
            }
            
            b = new Baraja();
            
            jugador[0].dineroEnPartida((-5));
            actualizarJugadores();
            for (int x =0; x < jugador.length;x++)
            {
                try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador[x].getNIF()+".txt",true)))) 
                {
                    DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    salida.println("------------ Apuesta minima realizada --------------------------\n");
                    salida.println(LocalDate.now().format(formatoCorto));
                    salida.println("El jugador pasó y se le dieron nuevas cartas");
                    salida.println("Nuevo saldo: "+jugador[x].getSaldo());
                    salida.println("-----------------------------------------------------------\n");
                    salida.println("******************* Juego Nuevo ***************************\n");
                    salida.close();
                } 
                catch (IOException ex) 
                {
                    Warnning w = new Warnning();
                    w.setTextoW("Error al crear archivo de registro");
                    w.setVisible(true);
                }  
            }
        }
    }//GEN-LAST:event_pasarActionPerformed

    private void descartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descartarActionPerformed
        if ((fase == 2)&&(seleccion!=-1)&&(contador < 2))
        {
            if(contador==0)
            {
                Carta temporal = cartasJ1.get(seleccion);
                cartasJ1.remove(seleccion);
                cartasJ1.add(seleccion, cartasD.get(0));
                cartasD.remove(0);
                cartasD.add(0, temporal);
                cartas[0][seleccion].setIcon(cartasJ1.get(seleccion).getImagen());
                descartadas[0].setIcon(cartasD.get(0).getImagen());
                txt2.setText("Puede descartar dos cartas pero debe hacerlo de una en una // Apuesta minima de 10$ // Si pasa perderá 5$");
            }
            else
            {
                Carta temporal = cartasJ1.get(seleccion);
                cartasJ1.remove(seleccion);
                cartasJ1.add(seleccion, cartasD.get(1));
                cartasD.remove(1);
                cartasD.add(1, temporal);
                
                cartas[0][seleccion].setIcon(cartasJ1.get(seleccion).getImagen());
                descartadas[1].setIcon(cartasD.get(1).getImagen());
                fase = 3;
                txt2.setText("Realice una apuesta o pase (Apuesta minima = 5$)");
            }
            contador++;      
            seleccion = -1;
        }
    }//GEN-LAST:event_descartarActionPerformed

    private int mano=0;
    
    private void apostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apostarActionPerformed
        if ((fase==2)||(fase==3))
        {
            for (int x=0; x<5; x++)
            {
                cartas[1][x].setIcon(cartasJ2.get(x).getImagen());
            }
            for (int x=0; x<5; x++)
            {
                cartas[2][x].setIcon(cartasJ3.get(x).getImagen());
            }
            for (int x=0; x<5; x++)
            {
                cartas[3][x].setIcon(cartasJ4.get(x).getImagen());
            }
 
            apuesta+=Double.parseDouble(dinero.getValue().toString());
            for (int x =0; x < jugador.length;x++)
            {
                jugador[x].dineroEnPartida(-apuesta);
                try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador[x]+".txt",true)))) 
                {
                    DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    salida.println("--------------- Apuesta realizada --------------------------\n");  
                    salida.println(LocalDate.now().format(formatoCorto));
                    salida.println("En juego: "+(apuesta));
                    salida.println("Nuevo saldo: "+jugador[x].getSaldo());
                    salida.println("-----------------------------------------------------------\n");
                    salida.println("--------------- Resultados de la partida --------------------------\n"); 
                    salida.println("Dinero en Juego: "+ apuesta*4);
                    salida.println("Cartas del jugador: "+jugador[0].getNIF());
                    for (int y=0; y<cartasJ1.size();y++)
                    {
                        salida.println("\t"+cartasJ1.get(y).toString());
                    }
                    salida.println("Cartas del jugador: "+jugador[1].getNIF());
                    for (int y=0; y<cartasJ2.size();y++)
                    {
                        salida.println("\t"+cartasJ2.get(y).toString());
                    }
                    salida.println("Cartas del jugador: "+jugador[2].getNIF());
                    for (int y=0; y<cartasJ3.size();y++)
                    {
                        salida.println("\t"+cartasJ3.get(y).toString());
                    }
                    salida.println("Cartas del jugador: "+jugador[3].getNIF());
                    for (int y=0; y<cartasJ4.size();y++)
                    {
                        salida.println("\t"+cartasJ4.get(y).toString());
                    }
                    salida.close();
                } 
                catch (IOException ex) 
                {
                    Warnning w = new Warnning();
                    w.setTextoW("Error al crear archivo de registro");
                    w.setVisible(true);
                }
            }
            apuesta*=4;
            
            Carta carta1[]= new Carta[5];
            Carta carta2[]= new Carta[5];
            Carta carta3[]= new Carta[5];
            Carta carta4[]= new Carta[5];
            for (int x=0;x<5;x++)
            {
                carta1[x]=cartasJ1.get(x);
                carta2[x]=cartasJ2.get(x);
                carta3[x]=cartasJ3.get(x);
                carta4[x]=cartasJ4.get(x);
            }
            
            ApuestaMesa a = new ApuestaMesa(carta1,carta2,carta3,carta4,apuesta);
            if(a.hasPremio())
            {
                txt1.setText("Ha ganado"+jugador[a.getGanador()].toString()+" con "+a.getTexto());
                jugador[a.getGanador()].premios.addPremio(a.getPremio());
                for (int x =0; x<4;x++)
                {
                    if(x==a.getGanador())
                        jugador[x].dineroEnPartida(a.verPremio());
                    else
                        jugador[x].dineroEnPartida(-a.verPremio());
                }
                actualizarJugadores();
            }
            else
            {
                txt1.setText("Empate, gana la mano");
                jugador[mano].premios.addPremio(new Premio(apuesta,true,1));
                for (int x =0; x<4;x++)
                {
                    if(x==mano)
                        jugador[x].dineroEnPartida(apuesta);
                    else
                        jugador[x].dineroEnPartida(-(apuesta/4));
                }
                actualizarJugadores();
            }
            txt2.setText("Pulse el mazo para volver a jugar");
            fase =4;
        }
    }//GEN-LAST:event_apostarActionPerformed

    private void dineroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dineroStateChanged
        if ((fase==2)||(fase==3))
        {
            double saldoMin=0;
            for (int x=0; x<jugador.length;x++)
            {
                if (x==0)
                    saldoMin=jugador[x].getSaldo();
                else
                {
                    if(saldoMin>jugador[x].getSaldo())
                        saldoMin=jugador[x].getSaldo();
                }
            }
            if (Double.parseDouble(dinero.getValue().toString())<10)
            {
                dinero.setValue(10);
                Warnning w = new Warnning();
                w.setTextoW("La apuesta minima son 10$");
                w.setVisible(true);
            }
            if (Double.parseDouble(dinero.getValue().toString())>saldoMin)
            {
                dinero.setValue(saldoMin);
                Warnning w = new Warnning();
                w.setTextoW("No puede apostar tanto, apuesta max: "+saldoMin+"$");
                w.setVisible(true);
            }
        }
    }//GEN-LAST:event_dineroStateChanged

    private static JugadorRegistrado jugador [] = new JugadorRegistrado[4];
    private final JLabel txtnombre[];
    private final JLabel txtdinero[];
    private final JLabel cartas[][];
    private final JLabel descartadas[];
    private final JLabel manos[];
    
    private int contador=0;
    
    private final boolean control[]={true, true, true, true, true};
    
    public void setJugador (JugadorRegistrado jugador1, JugadorRegistrado jugador2,JugadorRegistrado jugador3, JugadorRegistrado jugador4)
    {
        Mesa.jugador[0]=jugador1;
        Mesa.jugador[1]=jugador2;
        Mesa.jugador[2]=jugador3;
        Mesa.jugador[3]=jugador4;
        
        actualizarJugadores();    
    }
    
    private void actualizarJugadores()
    {
        for (int x =0; x < 4; x++)
        {
            txtnombre[x].setText(jugador[x].getNombre()+jugador[x].getApellidos());
            txtdinero[x].setText(" Saldo: "+jugador[x].getSaldo()+"$");
        }

    }
    
    private Baraja b = new Baraja();
    
    private int fase = 0;
    
    private double apuesta=0;
    
    private ArrayList < Carta > cartasJ1 = new ArrayList <>();
    private ArrayList < Carta > cartasJ2 = new ArrayList <>();
    private ArrayList < Carta > cartasJ3 = new ArrayList <>();
    private ArrayList < Carta > cartasJ4 = new ArrayList <>();

    private ArrayList < Carta > cartasD = new ArrayList <>();
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Mesa().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apostar;
    private javax.swing.JButton cruz;
    private javax.swing.JLabel d1;
    private javax.swing.JLabel d2;
    private javax.swing.JButton descartar;
    private javax.swing.JSpinner dinero;
    private javax.swing.JLabel j11;
    private javax.swing.JLabel j12;
    private javax.swing.JLabel j13;
    private javax.swing.JLabel j14;
    private javax.swing.JLabel j15;
    private javax.swing.JLabel j1dinero;
    private javax.swing.JLabel j1name;
    private javax.swing.JLabel j21;
    private javax.swing.JLabel j22;
    private javax.swing.JLabel j23;
    private javax.swing.JLabel j24;
    private javax.swing.JLabel j25;
    private javax.swing.JLabel j2dinero;
    private javax.swing.JLabel j2name;
    private javax.swing.JLabel j31;
    private javax.swing.JLabel j32;
    private javax.swing.JLabel j33;
    private javax.swing.JLabel j34;
    private javax.swing.JLabel j35;
    private javax.swing.JLabel j3dinero;
    private javax.swing.JLabel j3name;
    private javax.swing.JLabel j41;
    private javax.swing.JLabel j42;
    private javax.swing.JLabel j43;
    private javax.swing.JLabel j44;
    private javax.swing.JLabel j45;
    private javax.swing.JLabel j4dinero;
    private javax.swing.JLabel j4name;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel m1;
    private javax.swing.JLabel m2;
    private javax.swing.JLabel m3;
    private javax.swing.JLabel m4;
    private javax.swing.JLabel mazo;
    private javax.swing.JButton pasar;
    private javax.swing.JLabel txt1;
    private javax.swing.JLabel txt2;
    // End of variables declaration//GEN-END:variables
}
