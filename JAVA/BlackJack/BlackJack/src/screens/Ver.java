package screens;

import classes.CasaDeApuestas;
import classes.Premio;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.ImageIcon;

public class Ver extends javax.swing.JFrame {

    /**
     * Creates new form Ver
     */
    public Ver() {
        initComponents();
        
        actualizarList();
        
        //Muestra La Contabilidad General
        try
        {
            CasaDeApuestas.generarRegistro();
            String cadena;
            FileReader f = new FileReader("./src/RegistroMaster/Registro.txt");
            try (BufferedReader b = new BufferedReader(f)) 
            {
                while((cadena = b.readLine())!=null) 
                {
                    txt1.setText(txt1.getText()+"\n"+cadena);
                }
            }
            
        }
        catch(IOException e)
        {
            Warnning w = new Warnning();
            w.setTextoW("Error al leer archivo de registro");
            w.setVisible(true);
        }
        
        //Recoge los archivos de la Contabilidad asociada a cada jugador
        String listado[]= new File("./src/RegistroJugadores").list();
        
        for (int x=0; x<listado.length;x++)
        {
            if(listado[x].charAt(0)=='.')
                listado[x]="";
        }
        
        List.setListData(listado);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        volver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tab = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jTab = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        L1 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        txt3 = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        L2 = new javax.swing.JList<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        txt0 = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        L3 = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        txt4 = new javax.swing.JTextArea();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        L4 = new javax.swing.JList<>();
        jScrollPane12 = new javax.swing.JScrollPane();
        txt5 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt2 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        List = new javax.swing.JList<>();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        L5 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt6 = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Registro de Jugadores");
        setIconImage(new ImageIcon(getClass().getResource("/imgages/Icono.png")).getImage() );
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/Flecha.jpg"))); // NOI18N
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        jPanel4.add(volver, new java.awt.GridBagConstraints());

        jLabel1.setFont(new java.awt.Font("Malayalam MN", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registro de Jugadores  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel4.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jPanel4, gridBagConstraints);

        tab.setBackground(new java.awt.Color(204, 255, 204));

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.setLayout(new java.awt.CardLayout());

        txt1.setEditable(false);
        txt1.setColumns(20);
        txt1.setRows(5);
        txt1.setMargin(new java.awt.Insets(2, 10, 2, 10));
        jScrollPane1.setViewportView(txt1);

        jPanel5.add(jScrollPane1, "card2");

        tab.addTab("Listado", jPanel5);

        jPanel6.setLayout(new java.awt.CardLayout());

        jPanel8.setBackground(new java.awt.Color(204, 255, 204));
        jPanel8.setLayout(new java.awt.CardLayout());

        jPanel9.setBackground(new java.awt.Color(204, 255, 204));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        L1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Empate", "Superior", "BlackJack", "Total" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        L1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        L1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                L1ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(L1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel9.add(jScrollPane5, gridBagConstraints);

        txt3.setEditable(false);
        txt3.setColumns(20);
        txt3.setRows(5);
        jScrollPane6.setViewportView(txt3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        jPanel9.add(jScrollPane6, gridBagConstraints);

        jTab.addTab("VecesPremio", jPanel9);

        jPanel13.setBackground(new java.awt.Color(204, 255, 204));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        L2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Empate", "Superior", "BlackJack" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        L2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        L2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                L2ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(L2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel13.add(jScrollPane7, gridBagConstraints);

        txt0.setEditable(false);
        txt0.setColumns(20);
        txt0.setRows(5);
        jScrollPane8.setViewportView(txt0);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        jPanel13.add(jScrollPane8, gridBagConstraints);

        jTab.addTab("JugadoresPremio", jPanel13);

        jPanel14.setBackground(new java.awt.Color(204, 255, 204));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        L3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        L3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                L3ValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(L3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        jPanel14.add(jScrollPane9, gridBagConstraints);

        txt4.setEditable(false);
        txt4.setColumns(20);
        txt4.setRows(5);
        jScrollPane10.setViewportView(txt4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        jPanel14.add(jScrollPane10, gridBagConstraints);

        jTab.addTab("PremiosDeJugador", jPanel14);

        jPanel15.setBackground(new java.awt.Color(204, 255, 204));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        L4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        L4.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                L4ValueChanged(evt);
            }
        });
        jScrollPane11.setViewportView(L4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        jPanel15.add(jScrollPane11, gridBagConstraints);

        txt5.setEditable(false);
        txt5.setColumns(20);
        txt5.setRows(5);
        jScrollPane12.setViewportView(txt5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.1;
        gridBagConstraints.weighty = 0.1;
        jPanel15.add(jScrollPane12, gridBagConstraints);

        jTab.addTab("VecesPremiosDeJugador", jPanel15);

        jPanel8.add(jTab, "card2");

        jPanel6.add(jPanel8, "card2");

        tab.addTab("Premios", jPanel6);

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setLayout(new java.awt.CardLayout());

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setToolTipText("");

        txt2.setEditable(false);
        txt2.setColumns(20);
        txt2.setRows(5);
        jScrollPane4.setViewportView(txt2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.2;
        gridBagConstraints.weighty = 0.2;
        jPanel10.add(jScrollPane4, gridBagConstraints);

        List.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        List.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        List.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(List);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        jPanel10.add(jScrollPane2, gridBagConstraints);

        jTabbedPane1.addTab("tab3", jPanel10);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        L5.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                L5ValueChanged(evt);
            }
        });
        jScrollPane13.setViewportView(L5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel11.add(jScrollPane13, gridBagConstraints);

        txt6.setEditable(false);
        txt6.setColumns(20);
        txt6.setRows(5);
        jScrollPane3.setViewportView(txt6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        jPanel11.add(jScrollPane3, gridBagConstraints);

        jTabbedPane1.addTab("tab3", jPanel11);

        jPanel3.add(jTabbedPane1, "card2");

        tab.addTab("Jugadores", jPanel3);

        tab.setSelectedIndex(0);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(tab, gridBagConstraints);
        tab.getAccessibleContext().setAccessibleName("tab");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 2.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel7.setBackground(new java.awt.Color(0, 51, 51));
        jPanel7.setLayout(new java.awt.CardLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/BlackJack.jpeg"))); // NOI18N
        jLabel2.setPreferredSize(new java.awt.Dimension(471, 100));
        jPanel7.add(jLabel2, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        getContentPane().add(jPanel7, gridBagConstraints);

        setSize(new java.awt.Dimension(700, 672));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Abre el JFrame Dentro
     */
    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        Admin d = new Admin();
        d.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_volverActionPerformed

    /**
     * Muestra la contabilidad de un jugador en concreto
     */
    private void ListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListValueChanged
        try
        {
            txt2.setText("");
            String cadena;
            FileReader f = new FileReader("./src/RegistroJugadores/"+List.getSelectedValue());
            try (BufferedReader b = new BufferedReader(f)) 
            {
                while((cadena = b.readLine())!=null) 
                {
                    txt2.setText(txt2.getText()+"\n"+cadena);
                }
            }
            
        }
        catch(IOException e)
        {
            Warnning w = new Warnning();
            w.setTextoW("Error al leer archivo de registro");
            w.setVisible(true);
        }
    }//GEN-LAST:event_ListValueChanged

    private void L1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_L1ValueChanged
        int empate = 0;
        int empateMesa = 0;
        int superior = 0;
        int superiorMesa = 0;
        int blackjack = 0;
        int blackjackMesa = 0;
        Object [] datos = CasaDeApuestas.getRegistro().keySet().toArray();
        String [] claves = new String[datos.length];
        for (int x =0; x < datos.length; x++)
            claves[x] = datos [x].toString();
        for (String clave : claves) {
            empate+=CasaDeApuestas.getregistrado(clave).premios.getEmpate();
            empateMesa+=CasaDeApuestas.getregistrado(clave).premios.getEmpateMesa();
            superior+=CasaDeApuestas.getregistrado(clave).premios.getSuperior();
            superiorMesa+=CasaDeApuestas.getregistrado(clave).premios.getSuperiorMesa();
            blackjack+=CasaDeApuestas.getregistrado(clave).premios.getBlackJack();
            blackjackMesa+=CasaDeApuestas.getregistrado(clave).premios.getBlackJackMesa();

        }
        switch(L1.getSelectedIndex())
        {
            case 0:
                txt3.setText("Empates:\n");
                txt3.setText(txt3.getText()+"\tEn juego simple: "+ empate+"\n");
                txt3.setText(txt3.getText()+"\tEn mesa: "+ empateMesa+"\n");
                txt3.setText(txt3.getText()+"\tTotal: "+ (empate+empateMesa)+"\n");
                break;
            case 1:
                txt3.setText("Superiores:\n");
                txt3.setText(txt3.getText()+"\tEn juego simple: "+ superior+"\n");
                txt3.setText(txt3.getText()+"\tEn mesa: "+ superiorMesa+"\n");
                txt3.setText(txt3.getText()+"\tTotal: "+ (superior+superiorMesa)+"\n");
                break;
            case 2:
                txt3.setText("BlackJacks:\n");
                txt3.setText(txt3.getText()+"\tEn juego simple: "+ blackjack+"\n");
                txt3.setText(txt3.getText()+"\tEn mesa: "+ blackjackMesa+"\n");
                txt3.setText(txt3.getText()+"\tTotal: "+ (blackjack+blackjackMesa)+"\n");
                break;
            case 3:
                txt3.setText("Empates:\n");
                txt3.setText(txt3.getText()+"\tEn juego simple: "+ empate+"\n");
                txt3.setText(txt3.getText()+"\tEn mesa: "+ empateMesa+"\n");
                txt3.setText(txt3.getText()+"\tTotal: "+ (empate+empateMesa)+"\n");
                txt3.setText(txt3.getText()+"Superiores:\n");
                txt3.setText(txt3.getText()+"\tEn juego simple: "+ superior+"\n");
                txt3.setText(txt3.getText()+"\tEn mesa: "+ superiorMesa+"\n");
                txt3.setText(txt3.getText()+"\tTotal: "+ (superior+superiorMesa)+"\n");
                txt3.setText(txt3.getText()+"BlackJacks:\n");
                txt3.setText(txt3.getText()+"\tEn juego simple: "+ blackjack+"\n");
                txt3.setText(txt3.getText()+"\tEn mesa: "+ blackjackMesa+"\n");
                txt3.setText(txt3.getText()+"\tTotal: "+ (blackjack+blackjackMesa)+"\n");
                txt3.setText(txt3.getText()+"Premios repartidos en total: "+(empate+empateMesa+superior+superiorMesa+blackjack+blackjackMesa));
                break;
        }
        
    }//GEN-LAST:event_L1ValueChanged

    private void L2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_L2ValueChanged
        int empate = 0;
        int empateMesa = 0;
        int superior = 0;
        int superiorMesa = 0;
        int blackjack = 0;
        int blackjackMesa = 0;

        Object [] datos = CasaDeApuestas.getRegistro().keySet().toArray();
        String [] claves = new String[datos.length];
        txt0.setText("");
        for (int x =0; x < datos.length; x++)
            claves[x] = datos [x].toString();
        for (String clave : claves) {
            empate+=CasaDeApuestas.getregistrado(clave).premios.getEmpate();
            empateMesa+=CasaDeApuestas.getregistrado(clave).premios.getEmpateMesa();
            superior+=CasaDeApuestas.getregistrado(clave).premios.getSuperior();
            superiorMesa+=CasaDeApuestas.getregistrado(clave).premios.getSuperiorMesa();
            blackjack+=CasaDeApuestas.getregistrado(clave).premios.getBlackJack();
            blackjackMesa+=CasaDeApuestas.getregistrado(clave).premios.getBlackJackMesa();

            switch(L2.getSelectedIndex())
            {
                case 0:
                    if((empate+empateMesa) > 0)
                    {
                        txt0.setText(clave+"\n");
                    }     
                    break;
                case 1:
                    if((superior+superiorMesa) > 0)
                    {
                        txt0.setText(clave+"\n");
                    } 
                    break;
                case 2:
                    if((blackjack+blackjackMesa) > 0)
                    {
                        txt0.setText(clave+"\n");
                    } 
                    break;
            }
            empate = 0;
            empateMesa = 0;
            superior = 0;
            superiorMesa = 0;
            blackjack = 0;
            blackjackMesa = 0;
        }
    }//GEN-LAST:event_L2ValueChanged

    private void L3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_L3ValueChanged
        ArrayList <Premio> empates = new ArrayList<>();
        ArrayList <Premio> superiores = new ArrayList<>();
        ArrayList <Premio> blackjacks = new ArrayList<>();

        txt4.setText("");
        for (int x=0; x<CasaDeApuestas.getregistrado(L3.getSelectedValue()).premios.getPremios().size();x++) 
        {
          switch(((Premio)CasaDeApuestas.getregistrado(L3.getSelectedValue()).premios.getPremios().get(x)).getTipo())
            {
                case 0:
                    empates.add(((Premio)CasaDeApuestas.getregistrado(L3.getSelectedValue()).premios.getPremios().get(x)));
                    break;
                case 1:
                    superiores.add(((Premio)CasaDeApuestas.getregistrado(L3.getSelectedValue()).premios.getPremios().get(x)));
                    break;
                case 2:
                    blackjacks.add(((Premio)CasaDeApuestas.getregistrado(L3.getSelectedValue()).premios.getPremios().get(x)));
                    break;
            }  
        }
        txt4.setText(txt4.getText()+"Empates:\n");
        empates.forEach((pareja) -> {
            if(pareja.getEnMesa())
                txt4.setText(txt4.getText()+"\tEn mesa --> \t"+pareja.getPremio()+"$\n");
            else
                txt4.setText(txt4.getText()+"\tEn Juego simple --> \t"+pareja.getPremio()+"$\n");
        });
        txt4.setText(txt4.getText()+"Superiores:\n");
        superiores.forEach((doblePareja) -> {
            if(doblePareja.getEnMesa())
                txt4.setText(txt4.getText()+"\tEn mesa --> \t"+doblePareja.getPremio()+"$\n");
            else
                txt4.setText(txt4.getText()+"\tEn Juego simple --> \t"+doblePareja.getPremio()+"$\n");
        });
        txt4.setText(txt4.getText()+"BlackJacks:\n");
        blackjacks.forEach((trio) -> {
            if(trio.getEnMesa())
                txt4.setText(txt4.getText()+"\tEn mesa --> \t"+trio.getPremio()+"$\n");
            else
                txt4.setText(txt4.getText()+"\tEn Juego simple --> \t"+trio.getPremio()+"$\n");
        });
    }//GEN-LAST:event_L3ValueChanged

    private void L4ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_L4ValueChanged
        int empate = 0;
        int empateMesa = 0;
        int superior = 0;
        int superiorMesa = 0;
        int blackjack = 0;
        int blackjackMesa = 0;

        
        empate+=CasaDeApuestas.getregistrado(L4.getSelectedValue()).premios.getEmpate();
        empateMesa+=CasaDeApuestas.getregistrado(L4.getSelectedValue()).premios.getEmpateMesa();
        superior+=CasaDeApuestas.getregistrado(L4.getSelectedValue()).premios.getSuperior();
        superiorMesa+=CasaDeApuestas.getregistrado(L4.getSelectedValue()).premios.getSuperiorMesa();
        blackjack+=CasaDeApuestas.getregistrado(L4.getSelectedValue()).premios.getBlackJack();
        blackjackMesa+=CasaDeApuestas.getregistrado(L4.getSelectedValue()).premios.getBlackJackMesa();

        
        
        txt5.setText("Empates:\n");
        txt5.setText(txt5.getText()+"\tEn juego simple: "+ empate+"\n");
        txt5.setText(txt5.getText()+"\tEn mesa: "+ empateMesa+"\n");
        txt5.setText(txt5.getText()+"\tTotal: "+ (empate+empateMesa)+"\n");
        txt5.setText(txt5.getText()+"Superiores:\n");
        txt5.setText(txt5.getText()+"\tEn juego simple: "+ superior+"\n");
        txt5.setText(txt5.getText()+"\tEn mesa: "+ superiorMesa+"\n");
        txt5.setText(txt5.getText()+"\tTotal: "+ (superior+superiorMesa)+"\n");
        txt5.setText(txt5.getText()+"BlackJacks:\n");
        txt5.setText(txt5.getText()+"\tEn juego simple: "+ blackjack+"\n");
        txt5.setText(txt5.getText()+"\tEn mesa: "+ blackjackMesa+"\n");
        txt5.setText(txt5.getText()+"\tTotal: "+ (blackjack+blackjackMesa)+"\n");

        txt5.setText(txt5.getText()+"Premios repartidos en total: "+(empate+empateMesa+superior+superiorMesa+blackjack+blackjackMesa));

    }//GEN-LAST:event_L4ValueChanged

    private void L5ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_L5ValueChanged
        ArrayList <Premio> empates = new ArrayList<>();
        ArrayList <Premio> superiores = new ArrayList<>();
        ArrayList <Premio> blackjacks = new ArrayList<>();

        txt6.setText("");
        for (int x=0; x<CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getPremios().size();x++) 
        {
          switch(((Premio)CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getPremios().get(x)).getTipo())
            {
                case 0:
                    empates.add(((Premio)CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getPremios().get(x)));
                    break;
                case 1:
                    superiores.add(((Premio)CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getPremios().get(x)));
                    break;
                case 2:
                    blackjacks.add(((Premio)CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getPremios().get(x)));
                    break;
            }  
        }
        
        int empate = 0;
        double empaten = 0;
        int empateMesa = 0;
        double empateMesan = 0;
        int superior = 0;
        double superiorn = 0;
        int superiorMesa = 0;
        double superiorMesan = 0;
        int blackjack = 0;
        double blackjackn = 0;
        int blackjackMesa = 0;
        double blackjackMesan = 0;

        
        empate+=CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getEmpate();
        empateMesa+=CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getEmpateMesa();
        superior+=CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getSuperior();
        superiorMesa+=CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getSuperiorMesa();
        blackjack+=CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getBlackJack();
        blackjackMesa+=CasaDeApuestas.getregistrado(L5.getSelectedValue()).premios.getBlackJackMesa();
        
        
        txt6.setText("Empates:\n");
        txt6.setText(txt6.getText()+"\tEn juego simple: "+ empate+"\n");
        for (int x=0; x < empates.size(); x++)
        {
            if(!empates.get(x).getEnMesa())
            {
                txt6.setText(txt6.getText()+"\t--> \t"+empates.get(x).getPremio()+"\n");
                empaten += empates.get(x).getPremio();
            }
        }
        txt6.setText(txt6.getText()+"\tsubtotal: "+empaten+"$\n");
        txt6.setText(txt6.getText()+"\tEn mesa: "+ empateMesa+"\n");
        for (int x=0; x < empates.size(); x++)
        {
            if(empates.get(x).getEnMesa())
            {
                txt6.setText(txt6.getText()+"\t--> \t"+empates.get(x).getPremio()+"\n");
                empateMesan += empates.get(x).getPremio();
            }
        }
        txt6.setText(txt6.getText()+"\tsubtotal: "+empaten+"$\n");
        txt6.setText(txt6.getText()+"\tTotal: "+ (empate+empateMesa)+"\t--> "+(empaten+empateMesan)+"$\n");
        
        
        txt6.setText(txt6.getText()+"Superiores:\n");
        txt6.setText(txt6.getText()+"\tEn juego simple: "+ superior+"\n");
        for (int x=0; x < superiores.size(); x++)
        {
            if(!superiores.get(x).getEnMesa())
            {
                txt6.setText(txt6.getText()+"\t--> \t"+superiores.get(x).getPremio()+"\n");
                superiorn += superiores.get(x).getPremio();
            }
        }
        txt6.setText(txt6.getText()+"\tsubtotal: "+superiorn+"$\n");
        txt6.setText(txt6.getText()+"\tEn mesa: "+ superiorMesa+"\n");
        for (int x=0; x < superiores.size(); x++)
        {
            if(superiores.get(x).getEnMesa())
            {
                txt6.setText(txt6.getText()+"\t--> \t"+superiores.get(x).getPremio()+"\n");
                superiorMesan += superiores.get(x).getPremio();
            }
        }
        txt6.setText(txt6.getText()+"\tsubtotal: "+superiorMesan+"$\n");
        txt6.setText(txt6.getText()+"\tTotal: "+ (superior+superiorMesa)+"\t--> "+(superiorn+superiorMesan)+"$\n");
        
        
        txt6.setText(txt6.getText()+"BlackJacks:\n");
        txt6.setText(txt6.getText()+"\tEn juego simple: "+ blackjack+"\n");
        for (int x=0; x < blackjacks.size(); x++)
        {
            if(!blackjacks.get(x).getEnMesa())
            {
                txt6.setText(txt6.getText()+"\t--> \t"+blackjacks.get(x).getPremio()+"\n");
                blackjackn += blackjacks.get(x).getPremio();
            }
        }
        txt6.setText(txt6.getText()+"\tsubtotal: "+blackjackn+"$\n");
        txt6.setText(txt6.getText()+"\tEn mesa: "+ blackjackMesa+"\n");
        for (int x=0; x < blackjacks.size(); x++)
        {
            if(blackjacks.get(x).getEnMesa())
            {
                txt6.setText(txt6.getText()+"\t--> \t"+blackjacks.get(x).getPremio()+"\n");
                blackjackMesan += blackjacks.get(x).getPremio();
            }
        }
        txt6.setText(txt6.getText()+"\tsubtotal: "+blackjackMesan+"$\n");
        txt6.setText(txt6.getText()+"\tTotal: "+ (blackjack+blackjackMesa)+"\t--> "+(blackjackn+blackjackMesan)+"$\n");
        
        
        txt6.setText(txt6.getText()+"Premios repartidos en total: "+(empate+empateMesa+superior+superiorMesa+blackjack+blackjackMesa)+"\t--> "+(empaten+empateMesan+superiorn+superiorMesan+blackjackn+blackjackMesan)+"$");
    }//GEN-LAST:event_L5ValueChanged

        private void actualizarList()
    {
        //Muestra los jugadores existentes
        Object [] datos = CasaDeApuestas.getRegistro().keySet().toArray();
        String [] claves = new String[datos.length];
        for (int x =0; x < datos.length; x++)
            claves[x] = datos [x].toString();
        L3.setListData(claves);
        L4.setListData(claves);
        L5.setListData(claves);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ver().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> L1;
    private javax.swing.JList<String> L2;
    private javax.swing.JList<String> L3;
    private javax.swing.JList<String> L4;
    private javax.swing.JList<String> L5;
    private javax.swing.JList<String> List;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTab;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTextArea txt0;
    private javax.swing.JTextArea txt1;
    private javax.swing.JTextArea txt2;
    private javax.swing.JTextArea txt3;
    private javax.swing.JTextArea txt4;
    private javax.swing.JTextArea txt5;
    private javax.swing.JTextArea txt6;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
