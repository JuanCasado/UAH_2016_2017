package screens;

import classes.Apuesta;
import classes.Baraja;
import classes.Carta;
import classes.CasaDeApuestas;

import classes.Jugador;
import classes.JugadorRegistrado;
import classes.OrdenaCartas;
import classes.Premio;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

public class Game extends javax.swing.JFrame {

    /**
     * Creates new form Game
     */
    public Game() {   
        
        this.b = new Baraja();
        initComponents();
        dinero.setValue(10);
        fase = 1;
        this.cartas = new JLabel[][]{{m1,m2,m3,m4,m5,m6,m7,m8,m9},{j1, j2, j3, j4,j5,j6,j7,j8,j9}};
        this.pesos = new JLabel[]{m10,j10};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        salir = new javax.swing.JButton();
        txt = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        m1 = new javax.swing.JLabel();
        m2 = new javax.swing.JLabel();
        m3 = new javax.swing.JLabel();
        m4 = new javax.swing.JLabel();
        m5 = new javax.swing.JLabel();
        m6 = new javax.swing.JLabel();
        m7 = new javax.swing.JLabel();
        m8 = new javax.swing.JLabel();
        m9 = new javax.swing.JLabel();
        m10 = new javax.swing.JLabel();
        Crupier = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        mazo = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        j1 = new javax.swing.JLabel();
        j2 = new javax.swing.JLabel();
        j3 = new javax.swing.JLabel();
        j4 = new javax.swing.JLabel();
        j5 = new javax.swing.JLabel();
        j6 = new javax.swing.JLabel();
        j7 = new javax.swing.JLabel();
        j8 = new javax.swing.JLabel();
        j9 = new javax.swing.JLabel();
        j10 = new javax.swing.JLabel();
        Jugador = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        txtb = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        pasar = new javax.swing.JButton();
        apostar = new javax.swing.JButton();
        dinero = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Game");
        setIconImage(new ImageIcon(getClass().getResource("/imgages/Icono.png")).getImage() );
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel17.setBackground(new java.awt.Color(109, 131, 31));
        jPanel17.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 102, 0), java.awt.Color.black));
        jPanel17.setForeground(new java.awt.Color(109, 131, 31));
        jPanel17.setLayout(new java.awt.CardLayout(20, 20));

        jPanel18.setBackground(new java.awt.Color(109, 131, 31));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        jPanel19.setBackground(new java.awt.Color(109, 131, 31));
        jPanel19.setLayout(new java.awt.CardLayout());

        jPanel20.setBackground(new java.awt.Color(109, 131, 31));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/cruz.png"))); // NOI18N
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jPanel20.add(salir, new java.awt.GridBagConstraints());

        txt.setBackground(new java.awt.Color(0, 74, 0));
        txt.setFont(new java.awt.Font("Malayalam MN", 1, 36)); // NOI18N
        txt.setForeground(new java.awt.Color(223, 223, 223));
        txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt.setText("Comience el juego golpeando APOSTAR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel20.add(txt, gridBagConstraints);

        jPanel19.add(jPanel20, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 12;
        jPanel18.add(jPanel19, gridBagConstraints);

        jPanel21.setBackground(new java.awt.Color(109, 131, 31));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jPanel22.setBackground(new java.awt.Color(109, 131, 31));
        jPanel22.setLayout(new java.awt.CardLayout());

        jPanel23.setBackground(new java.awt.Color(109, 131, 31));
        jPanel23.setLayout(new java.awt.GridBagLayout());

        jPanel24.setBackground(new java.awt.Color(109, 131, 31));
        jPanel24.setLayout(new java.awt.GridBagLayout());

        m1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m1, gridBagConstraints);

        m2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m2, gridBagConstraints);

        m3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m3, gridBagConstraints);

        m4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m4, gridBagConstraints);

        m5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m5, gridBagConstraints);

        m6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m6, gridBagConstraints);

        m7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m7, gridBagConstraints);

        m8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m8, gridBagConstraints);

        m9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m9, gridBagConstraints);

        m10.setFont(new java.awt.Font("Malayalam MN", 1, 48)); // NOI18N
        m10.setForeground(new java.awt.Color(223, 223, 223));
        m10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m10.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel24.add(m10, gridBagConstraints);

        Crupier.setFont(new java.awt.Font("Malayalam MN", 1, 24)); // NOI18N
        Crupier.setForeground(new java.awt.Color(0, 102, 0));
        Crupier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Crupier.setText("CRUPIER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        jPanel24.add(Crupier, gridBagConstraints);

        jPanel23.add(jPanel24, new java.awt.GridBagConstraints());

        jPanel1.setBackground(new java.awt.Color(109, 131, 31));
        jPanel1.setLayout(new java.awt.CardLayout(20, 20));

        mazo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mazo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/carta.jpg"))); // NOI18N
        mazo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mazoMouseClicked(evt);
            }
        });
        jPanel1.add(mazo, "card2");

        jPanel23.add(jPanel1, new java.awt.GridBagConstraints());

        jPanel25.setBackground(new java.awt.Color(109, 131, 31));
        jPanel25.setLayout(new java.awt.GridBagLayout());

        j1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j1, gridBagConstraints);

        j2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j2, gridBagConstraints);

        j3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j3, gridBagConstraints);

        j4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j4, gridBagConstraints);

        j5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j5, gridBagConstraints);

        j6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j6, gridBagConstraints);

        j7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j7, gridBagConstraints);

        j8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j8, gridBagConstraints);

        j9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/void.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j9, gridBagConstraints);

        j10.setFont(new java.awt.Font("Malayalam MN", 1, 48)); // NOI18N
        j10.setForeground(new java.awt.Color(223, 223, 223));
        j10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        j10.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel25.add(j10, gridBagConstraints);

        Jugador.setFont(new java.awt.Font("Malayalam MN", 1, 24)); // NOI18N
        Jugador.setForeground(new java.awt.Color(0, 102, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        jPanel25.add(Jugador, gridBagConstraints);

        jPanel23.add(jPanel25, new java.awt.GridBagConstraints());

        jPanel22.add(jPanel23, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        jPanel21.add(jPanel22, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 0.1;
        jPanel18.add(jPanel21, gridBagConstraints);

        jPanel28.setBackground(new java.awt.Color(109, 131, 31));

        txtb.setBackground(new java.awt.Color(0, 71, 0));
        txtb.setFont(new java.awt.Font("Malayalam MN", 1, 14)); // NOI18N
        txtb.setForeground(new java.awt.Color(223, 223, 223));
        txtb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel28.add(txtb);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        jPanel18.add(jPanel28, gridBagConstraints);

        jPanel29.setBackground(new java.awt.Color(109, 131, 31));
        jPanel29.setLayout(new java.awt.CardLayout());

        jPanel30.setBackground(new java.awt.Color(109, 131, 31));
        jPanel30.setLayout(new java.awt.GridLayout(1, 0, 0, 7));

        pasar.setBackground(new java.awt.Color(153, 153, 0));
        pasar.setFont(new java.awt.Font("Malayalam MN", 1, 13)); // NOI18N
        pasar.setText("PASAR");
        pasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasarActionPerformed(evt);
            }
        });
        jPanel30.add(pasar);

        apostar.setBackground(new java.awt.Color(51, 255, 0));
        apostar.setFont(new java.awt.Font("Malayalam MN", 1, 13)); // NOI18N
        apostar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgages/Apostar.png"))); // NOI18N
        apostar.setText("APOSTAR");
        apostar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apostarActionPerformed(evt);
            }
        });
        jPanel30.add(apostar);

        dinero.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dineroStateChanged(evt);
            }
        });
        jPanel30.add(dinero);

        jPanel2.setBackground(new java.awt.Color(109, 131, 31));
        jPanel2.setLayout(new java.awt.GridLayout(0, 1));

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("11");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jPanel30.add(jPanel2);

        jPanel29.add(jPanel30, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 10;
        jPanel18.add(jPanel29, gridBagConstraints);

        jPanel17.add(jPanel18, "card2");

        getContentPane().add(jPanel17, "card3");

        setSize(new java.awt.Dimension(1500, 822));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private Baraja b = new Baraja();
    
    private final JLabel cartas[][];
    private final JLabel pesos[];
    
    private boolean registrado;
    private int fase =0;
    
    private double apuesta=0;
    
    private final ArrayList < Carta  > CartasJ = new ArrayList <>();
    private final ArrayList < Carta  > CartasM = new ArrayList <>();
    
    
    private int calculaPeso (ArrayList <Carta> cartas)
    {
        int acumula = 0;
        
        acumula = cartas.stream().map((carta) -> carta.getPeso()).reduce(acumula, Integer::sum); 
        
        return acumula;
    }
    
    public void setRegistrado(boolean registrado)
    {
        this.registrado=registrado;
    }
    
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        if (registrado)
        {
            try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador.getNIF()+".txt",true)))) 
                {
                    DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    salida.println("***************** SALIÓ DEL JUEGO*******************************\n");
                    salida.println(LocalDate.now().format(formatoCorto));
                    salida.println("*****************************************************************\n");
                    salida.close();
                } 
                catch (IOException ex) 
                {
                    Warnning w = new Warnning();
                    w.setTextoW("Error al crear archivo de registro");
                    w.setVisible(true);
                }
            Dentro d = new Dentro();
            d.setVisible(true);
            this.setVisible(false);
            this.dispose();
        }
        else
        {
            NoRegistradoSaliente n = new NoRegistradoSaliente();
            n.setVisible(true);
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_salirActionPerformed

    private void pasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasarActionPerformed
        if ((fase == 4)||(fase ==6))
        {
            String texto;
            ArrayList <ArrayList <Carta>> cartas= new ArrayList<>();
            cartas.add(CartasM);
            cartas.add(CartasJ);
            Apuesta a = new Apuesta (cartas,apuesta);
            
            if (a.getPremio()==0)
            {
                jugador.aumentarSaldo(a.verPremio());
                texto=a.getTexto();
                CasaDeApuestas.getregistrado("Crupier").premios.addPremio(new Premio(a.verPremio(),false,a.getPremio()));
                if(registrado)
                    ((JugadorRegistrado)jugador).premios.addPremio(new Premio(a.verPremio(),false,a.getPremio()));
                txt.setText("Sin ganador");
            }
            else
            {
                if (a.getGanador()==0)
                {
                    CasaDeApuestas.getregistrado("Crupier").aumentarSaldo(a.verPremio());
                    jugador.retirarBeneficios(a.verPremio());
                    texto="Gana el Crupier con "+a.getTexto();
                    txt.setText(texto);
                    CasaDeApuestas.getregistrado("Crupier").premios.addPremio(new Premio(a.verPremio(),false,a.getPremio()));
                }
                else 
                {
                    CasaDeApuestas.getregistrado("Crupier").retirarBeneficios(a.verPremio());
                    jugador.aumentarSaldo(a.verPremio());
                    texto="Gana "+jugador.getNIF()+" con "+a.getTexto();
                    txt.setText(texto);
                    if(registrado)
                        ((JugadorRegistrado)jugador).premios.addPremio(new Premio(a.verPremio(),false,a.getPremio()));
                }
            }
            
            try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador.getNIF()+".txt",true)))) 
            {
                DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                salida.println("--------------- Resultados de la partida --------------------------\n");  
                salida.println(LocalDate.now().format(formatoCorto));
                salida.println("Dinero en Juego: "+ apuesta);
                salida.println("Cartas del jugador: ");
                for (int x =0; x<CartasJ.size(); x++)
                {
                    salida.println("\t"+CartasJ.get(x).toString());
                }
                salida.println("Cartas del crupier: ");
                for (int x =0; x<CartasM.size(); x++)
                {
                    salida.println("\t"+CartasM.get(x).toString());
                }
                
                salida.println(texto);
                salida.println("Ganancia: "+a.verPremio());
                salida.println("Nuevo saldo: "+jugador.getSaldo());
                salida.println("--------------------------------------------------------------\n");  
                salida.close();
                
                salida.close();
            } 
            catch (IOException ex) 
            {
                Warnning w = new Warnning();
                w.setTextoW("Error al crear archivo de registro");
                w.setVisible(true);
            }
            
            //Muestra las Cartas  
            for (int x =0;x < CartasM.size(); x++)
            {
                this.cartas[0][x].setIcon(CartasM.get(x).getImagen());
            }
            pesos[0].setText(calculaPeso(CartasM)+"");
            
            txt.setText(txt.getText()+"; golpee APOSTAR para vaciar la mesa");
            actualizar();
            txtb.setText("");
            fase = 9;
        }
    }//GEN-LAST:event_pasarActionPerformed
    
    private void apostarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apostarActionPerformed
        if (fase == 3)
        {
            if (Double.parseDouble(dinero.getValue().toString())<10)
            {
                dinero.setValue(10);
                Warnning w = new Warnning();
                w.setTextoW("La apuesta minima son 10$");
                w.setVisible(true);
            }
            else if (Double.parseDouble(dinero.getValue().toString())>jugador.getSaldo())
            {
                dinero.setValue(jugador.getSaldo());
                Warnning w = new Warnning();
                w.setTextoW("No puede apostar tanto");
                w.setVisible(true);
            }
            else 
            {
                apuesta = Double.parseDouble(dinero.getValue().toString());
                fase = 4;
                dinero.setValue(10);
                txt.setText("Golpee el mazo para obtener más cartas o PASAR para ver el resultado");
                jugador.retirarBeneficios(apuesta);
                actualizar();
                try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador.getNIF()+".txt",true)))) 
                {
                    DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    salida.println("--------------- Apuesta realizada --------------------------\n");  
                    salida.println(LocalDate.now().format(formatoCorto));
                    salida.println("En juego: "+apuesta);
                    salida.println("Nuevo saldo: "+jugador.getSaldo());
                    salida.println("-----------------------------------------------------------\n");
                    salida.close();
                } 
                catch (IOException ex) 
                {
                    Warnning w = new Warnning();
                    w.setTextoW("Error al crear archivo de registro");
                    w.setVisible(true);
                }
            }
        } 
        if (fase ==1)
        {
            CasaDeApuestas.getregistrado("Crupier").añadirPartida();
            if(registrado)
                    ((JugadorRegistrado)jugador).añadirPartida();
            try (PrintWriter salida = new PrintWriter(new BufferedWriter(new FileWriter("./src/RegistroJugadores/"+jugador.getNIF()+".txt",true)))) 
                {
                    DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    salida.println("******************* Juego Nuevo ***************************\n");
                    salida.println(LocalDate.now().format(formatoCorto));
                    salida.close();
                } 
                catch (IOException ex) 
                {
                    Warnning w = new Warnning();
                    w.setTextoW("Error al crear archivo de registro");
                    w.setVisible(true);
                }
            //Reparte las cartas
            CartasJ.addAll(b.darCartas(2));
            CartasM.addAll(b.darCartas(2));
            //Ordena las cartas
            CartasJ.sort(new OrdenaCartas());
            CartasM.sort(new OrdenaCartas());
            //Muestra las Cartas  
            for (int y =0;y < CartasJ.size(); y++)
            {
                cartas[1][y].setIcon(CartasJ.get(y).getImagen());
            }
            //Calcula los pesos de los ases
            int contador =0;
            for (int y =0;y < CartasJ.size(); y++)
            {
                if (CartasJ.get(y).getPeso()==0)
                    contador ++;
            }
            if (contador > 0)
            {
                txtb.setText("Elija el valor de su as 1 u 11");
                fase = 2;
            }
            else 
            {
                txt.setText("Realice su apuesta");
                fase = 3;
                cartas[0][0].setIcon(CartasM.get(0).getImagen());
            }
            for (int y =0;y < CartasM.size(); y++)
            {
                if (CartasM.get(y).getPeso()==0)
                {
                    if ((calculaPeso(CartasM)+11)<22)
                        CartasM.get(y).setPeso(11);
                    else
                        CartasM.get(y).setPeso(1);                        
                }
            }
            //Calcula los pesos totales
            pesos[0].setText("X");
            pesos[1].setText(calculaPeso(CartasJ)+"");
        }
        if (fase == 9)
        {
            //Vacia las cartas
            ImageIcon vacio = new ImageIcon("./src/imgages/void.png");
            for (int x =0;x < cartas[0].length; x++)
            {
                this.cartas[1][x].setIcon(vacio);
                this.cartas[0][x].setIcon(vacio);
            } 
            txt.setText("Comience el juego golpeando APOSTAR");
            fase = 1;
            CartasM.clear();
            CartasJ.clear();
            pesos[0].setText("0");
            pesos[1].setText("0");
        }
    }//GEN-LAST:event_apostarActionPerformed

    private void dineroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dineroStateChanged
        if (fase == 3)
        {
            if (Double.parseDouble(dinero.getValue().toString())<10)
            {
                dinero.setValue(10);
                Warnning w = new Warnning();
                w.setTextoW("La apuesta minima son 10$");
                w.setVisible(true);
            }
            else if (Double.parseDouble(dinero.getValue().toString())>jugador.getSaldo())
            {
                dinero.setValue(jugador.getSaldo());
                Warnning w = new Warnning();
                w.setTextoW("No puede apostar tanto");
                w.setVisible(true);
            }
        }
    }//GEN-LAST:event_dineroStateChanged

    private void mazoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mazoMouseClicked
        if (fase == 4)
        {
            //Reparte las cartas
            CartasJ.addAll(b.darCartas(1));
            if (calculaPeso(CartasM) < 17)
            {
               CartasM.addAll(b.darCartas(1)); 
            }
            //Ordena las cartas
            CartasJ.sort(new OrdenaCartas());
            CartasM.sort(new OrdenaCartas());
            //Muestra las Cartas  
            for (int y =0;y < CartasJ.size(); y++)
            {
                cartas[1][y].setIcon(CartasJ.get(y).getImagen());
            }
            //Calcula los pesos de los ases
            int contador =0;
            for (int y =0;y < CartasJ.size(); y++)
            {
                if (CartasJ.get(y).getPeso()==0)
                    contador ++;
            }
            if (contador > 0)
            {
                txtb.setText("Elija el valor de su as 1 u 11");
                fase = 5;
            }

            for (int y =0;y < CartasM.size(); y++)
            {
                if (CartasM.get(y).getPeso()==0)
                {
                    if ((calculaPeso(CartasM)+11)<22)
                        CartasM.get(y).setPeso(11);
                    else
                        CartasM.get(y).setPeso(1);                        
                }
            }
            //Calcula los pesos totales
            pesos[0].setText("X");
            pesos[1].setText(calculaPeso(CartasJ)+"");
            
            if (CartasJ.size()==9)
            {
                txt.setText("No puede recibir más cartas pulse PASAR");
                fase = 6;
            }
        }
        
    }//GEN-LAST:event_mazoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (fase == 2)
        {
            boolean control = true;
            int contador = 0;
            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (control &&(CartasJ.get(x).getPeso()==0))
                {
                    control = false;
                    CartasJ.get(x).setPeso(1);
                }
            }

            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (CartasJ.get(x).getPeso()==0)
                    contador++;
            }    
            
            if (contador == 0)
            {
                fase = 3;  
                txt.setText("Realice su apuesta");
                txtb.setText("");
                pesos[1].setText(calculaPeso(CartasJ)+"");
                cartas[0][0].setIcon(CartasM.get(0).getImagen());
            }
        }
        if (fase == 5)
        {
            boolean control = true;
            int contador = 0;
            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (control &&(CartasJ.get(x).getPeso()==0))
                {
                    control = false;
                    CartasJ.get(x).setPeso(1);
                }
            }

            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (CartasJ.get(x).getPeso()==0)
                    contador++;
            }    
            
            if (contador == 0)
            {
                fase = 4;  
                txtb.setText("");
                pesos[1].setText(calculaPeso(CartasJ)+"");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (fase == 5)
        {
            boolean control = true;
            int contador = 0;
            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (control &&(CartasJ.get(x).getPeso()==0))
                {
                    control = false;
                    CartasJ.get(x).setPeso(11);
                }
            }

            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (CartasJ.get(x).getPeso()==0)
                    contador++;
            }    
            
            if (contador == 0)
            {
                fase = 4;  
                txtb.setText("");
                pesos[1].setText(calculaPeso(CartasJ)+"");
            }
        }
        if (fase == 2)
        {
            boolean control = true;
            int contador = 0;
            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (control &&(CartasJ.get(x).getPeso()==0))
                {
                    control = false;
                    CartasJ.get(x).setPeso(11);
                }
            }

            for (int x = 0; x < CartasJ.size(); x++)
            {
                if (CartasJ.get(x).getPeso()==0)
                    contador++;
            }    
            if (contador == 0)
            {
                fase = 3;  
                txt.setText("Realice su apuesta");
                txtb.setText("");
                pesos[1].setText(calculaPeso(CartasJ)+"");
                cartas[0][0].setIcon(CartasM.get(0).getImagen());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private static Jugador jugador;
    
    public static void setJugador (Jugador jugador)
    {
        Game.jugador=jugador;
    }
    
    public void actualizar()
    {
        Jugador.setText(jugador.getNombre()+jugador.getApellidos()+"\t"+"Saldo: "+jugador.getSaldo()+"$");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Game().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Crupier;
    private javax.swing.JLabel Jugador;
    private javax.swing.JButton apostar;
    private javax.swing.JSpinner dinero;
    private javax.swing.JLabel j1;
    private javax.swing.JLabel j10;
    private javax.swing.JLabel j2;
    private javax.swing.JLabel j3;
    private javax.swing.JLabel j4;
    private javax.swing.JLabel j5;
    private javax.swing.JLabel j6;
    private javax.swing.JLabel j7;
    private javax.swing.JLabel j8;
    private javax.swing.JLabel j9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JLabel m1;
    private javax.swing.JLabel m10;
    private javax.swing.JLabel m2;
    private javax.swing.JLabel m3;
    private javax.swing.JLabel m4;
    private javax.swing.JLabel m5;
    private javax.swing.JLabel m6;
    private javax.swing.JLabel m7;
    private javax.swing.JLabel m8;
    private javax.swing.JLabel m9;
    private javax.swing.JLabel mazo;
    private javax.swing.JButton pasar;
    private javax.swing.JButton salir;
    private javax.swing.JLabel txt;
    private javax.swing.JLabel txtb;
    // End of variables declaration//GEN-END:variables
}
